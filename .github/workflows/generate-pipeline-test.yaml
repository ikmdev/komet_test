name: Generate Data Pipeline
run-name: Generate Data Pipeline -- ${{github.ref_name || github.head_ref}}
on:
  workflow_dispatch:
    inputs:
      tag_name:
        type: choice
        description: Enter Tag Name
        required: true
        options:
          - 12.43.0
          - 1.1.0
          - 1.0.0
      properties_version:
        type: string
        description: "Enter Properties Version \nhttps://central.sonatype.com/artifact/dev.ikm.maven.tinkar/tinkar-example-data-properties/versions\n"
        required: true
env:
  DATA_PROPERTIES_VERSION: tinkar-example-data-properties.version=${{inputs.properties_version}}
jobs:
  generate-data:
    name: Generate Data
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          ref: ${{inputs.tag_name}}
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: zulu
          java-version: "21"
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_CENTRAL_TOKEN
          gpg-private-key: ${{secrets.GPG_KEY}}
          gpg-passphrase: MAVEN_GPG_PASSPHRASE
      - name: Maven Settings File
        uses: whelk-io/maven-settings-xml-action@v22
        with:
          servers: '[{"id": "maven-releases", "username": "admin", "password": "${{secrets.EC2_NEXUS_PASSWORD}}"}]'
          profiles: '[{"id": "nexus-profile", "properties": {"altDeploymentRepository": "maven-releases::https://nexus.tinkarbuild.com/repository/maven-releases"}}]'
          active_profiles: '["nexus-profile"]'
          output_file: .m2/settings.xml
      - name: Maven Build
        run: "mvn clean install \\\n  --batch-mode \\\n  -U \\\n  -e \\\n  -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn \\\n  -Dmaven.build.cache.enabled=false \\\n  -PcodeQuality \\\n  -PgenerateData \\\n  -D${{env.DATA_PROPERTIES_VERSION}} \\\n  ${{  steps.version_verification.outputs.RELEASE_ENFORCEMENT  }} \n"
      - name: Deploy To Nexus
        run: "mvn deploy \\\n    --batch-mode \\\n    -U \\\n    -e \\\n    -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn \\\n    -DskipTests \\\n    -DskipITs \\\n    -s '/home/runner/work/${{github.event.repository.name}}/${{github.event.repository.name}}/.m2/settings.xml'\\\n    -DrepositoryId='maven-releases' \\\n    -D${{env.DATA_PROPERTIES_VERSION}} \n"
      - name: Version Verification
        run: "CURRENT_VERSION=$(mvn help:evaluate -D'expression=project.version' -q -D'forceStdout') \nif [[ \"$CURRENT_VERSION\" == *\"SNAPSHOT\"* ]]; then\n    echo \"::error::Current Version $CURRENT_VERSION Is Invalid\"\n    exit\nfi\n"
      - name: Publish To OSSRH (Maven Central Staging)
        run: "mvn deploy \\\n   --batch-mode \\\n   -e \\\n   -U \\\n   -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn \\\n   -DskipTests \\\n   -DskipITs \\\n   -Dmaven.main.skip \\\n   -Dmaven.test.skip \\\n   -DrepositoryId=ossrh \\\n   -DrepositoryIdOSSRH='true' \\\n   -PstageOSSRH \\\n   -PdeployReleaseDataArtifacts \\\n   -Dmaven.deploy.skip=true \\\n   -DskipNexusStagingDeployMojo=true \\\n   -Dmaven.build.cache.enabled=false \\\n   -D${{env.DATA_PROPERTIES_VERSION}}  \n        \n"
        env:
          MAVEN_USERNAME: ${{secrets.OSSRH_TOKEN_USER}}
          MAVEN_CENTRAL_TOKEN: ${{secrets.OSSRH_TOKEN_PASS}}
          MAVEN_GPG_PASSPHRASE: ${{secrets.GPG_PASSPHRASE}}
